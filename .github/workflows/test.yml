#project name
name: lilibox_test_front

on:
  push:
    branches: [test]
  # pull_request:
  #   branches: [test]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: mlksolutions
          password: MLK-solutions@2024
      - name: check branch name
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Rename environment file
        run: |
          cp src/environments/environment.testing.ts src/environments/environment.main.ts
      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: mlksolutions/test-front
          build-args: |
            BRANCH=${{ env.BRANCH }}
          push: true
      - name: Login to server
        uses: appleboy/ssh-action@master
        with:
          host : 93.190.139.8
          username: root
          password : MLK-solutions@2024
          port : 22
          script : |
                    cd /home

                    cat ./dockerpassword.txt | docker login --username mlksolutions --password-stdin

                    docker compose ps -q --filter "name=test-front" | grep -q . && docker compose stop test-front || echo "test-front service is not running."
                            
                    docker compose ps -a -q --filter "name=test-front" | grep -q . && docker rm test-front || echo "test-front container does not exist."
                            
                    docker images mlksolutions/test-front -q | grep -q . && docker rmi mlksolutions/test-front || echo "mlksolutions/test-front image does not exist."
                            
                    docker compose pull test-front
                            
                    docker compose up test-front -d

                    docker compose restart waf
                            
                    docker images --filter "dangling=true" -q --no-trunc | grep -q . && docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || echo "No dangling images to remove."
